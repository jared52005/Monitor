<?xml version="1.0"?>
<doc>
    <assembly>
        <name>vxlapi_NET</name>
    </assembly>
    <members>
        <member name="T:vxlapi_NET.XLClass.XLcanFdConf">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            CAN FD configuration
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.XLcanTxEvent">
            <summary>
            CAN/CAN FD Transmit Event
            </summary>
        </member>
        <member name="T:vxlapi_NET.XLClass.XLcanRxEvent">
            <summary>
            CAN/CAN FD Receive Event
            </summary>
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_canfd_event_collection">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            A set of single CAN events. Used by XL_Transmit(). 
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_can_msg">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            A single CAN message with a length of 8 (data bytes).
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.T_XL_ETH_FRAME">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Structures for Ethernet API. 
            Ethernet Frame.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="F:vxlapi_NET.XLClass.T_XL_ETH_FRAME.etherType">
            <summary>
             EtherType in host byte order. You have to manually convert from/to netowrk byte order.
            </summary>
        </member>
        <member name="T:vxlapi_NET.XLClass.T_XL_ETH_FRAMEDATA">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Ethernet Framedata
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.T_XL_ETH_DATAFRAME_RX">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Ethernet Data Frame RX
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.T_XL_ETH_DATAFRAME_RX_ERROR">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Ethernet Data Frame RX Error
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.T_XL_ETH_DATAFRAME_TX">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Ethernet Data Frame TX. Either fill the structure frameData.ethFrame or the frameData.rawFrame array, because the two will be
            or-ed when transmitting. Note that both are zero-initialized after construction.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.T_XL_ETH_DATAFRAME_TXACK_OTHERAPP">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Ethernet Data Frame TXACK Other App
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.T_XL_ETH_DATAFRAME_TX_ERR_OTHERAPP">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Ethernet Data Frame TXERR Other App
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.T_XL_ETH_LOSTEVENT">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Ethernet Data Lost Event
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.T_XL_ETH_DATAFRAME_TX_ERROR">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Ethernet Data Frame TX Error
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.T_XL_ETH_CONFIG_RESULT">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Ethernet Config Result
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.T_XL_ETH_CHANNEL_STATUS">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Ethernet Channel Status
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.T_XL_ETH_EVENT">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Ethernet Event
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.s_xl_eth_tag_data">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Ethernet Tag Data
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.T_XL_ETH_CONFIG">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Ethernet Config
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_fr_cluster_configuration">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            FlexRay structure which is used by XL_FrSetConfiguration().
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_fr_channel_config">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            FlexRay structure which is used by XL_FrSetMode().
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_fr_set_modes">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            FlexRay structure which is used by XL_FrSetMode().
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_fr_event">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Global FlexRay event for Tx and Rx. The event type and its data is specified by "tag".
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_fr_tag_data">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            The global FlexRay event "xl_fr_event" can contain several tag data depening on its type, which is specified by "tag" in the event structure. 
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_fr_start_cycle">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Event type XL_FR_START_CYCLE.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_fr_rx_frame">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Event type XL_FR_RX_FRAME.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_fr_tx_frame">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Event type XL_FR_TX_FRAME.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_fr_wakeup">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Event type XL_FR_WAKEUP.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_fr_symbol_window">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Event type XL_FR_SYMBOL_WINDOW.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_fr_error">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Event type XL_FR_ERROR.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_fr_error_poc_mode">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Event type XL_FR_ERROR_POC_MODE.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_fr_error_sync_frames">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Event type XL_FR_ERROR_SYNC_FRAMES.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_fr_error_clock_corr_failure">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Event type XL_FR_ERROR_CLOCK_CORR_FAILURE.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_fr_error_nit_failure">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Event type XL_FR_ERROR_NIT_FAILURE.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_fr_error_cc_error">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Event type XL_FR_ERROR_CC_ERROR. 
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_fr_status">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Event type XL_FR_STATUS.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_fr_nm_vector">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Event type XL_FR_STATUS.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_fr_error_info">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Structure containing several error information depening on the tag in "xl_fr_error".
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_fr_spy_frame">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Structure containing several spy frame information.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_fr_spy_symbol">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Structure containing several spy symbol information.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_fr_acceptance_filter">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Structure containing several acceptance settings.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_channel_config">
            ------------------------------------------------------------------------------------------------------------------------------- 
            <summary>
            Data set of a single channel configuration. This sub structure is used for xl_driver_config.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_driver_config">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Data set of driver configuration, with an array of channel configs. Used by XL_GetDriverConfig().
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_ip_address_version">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Data set of remote deviced configuration used by XL_GetRemoteDeviceInfo().
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_event">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Single CAN event with one message. Use class xl_event_collection for a set of CAN events.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_tag_data">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Overall tag data for each event for a set of CAN events.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_application_notification">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Overall tag data for application notification.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_transceiver">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Transceiver event tags.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_event_collection">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            A set of single CAN events. Used by XL_Transmit(). 
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_can_bus_params">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Data set for CAN bus parameters.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_canFd_bus_params">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Data set for CAN-FD bus parameters.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_most_bus_params">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Data set for MOST bus parameters.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_flexray_bus_params">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Data set for FlexRay bus parameters.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_ethernet_bus_params">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Data set for Ethernet bus parameters.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="F:vxlapi_NET.XLClass.xl_ethernet_bus_params.macAddr">
            <summary>MAC address (starting with MSB!)</summary>
        </member>
        <member name="F:vxlapi_NET.XLClass.xl_ethernet_bus_params.connector">
            <summary>XL_ETH_STATUS_CONNECTOR_xxx</summary>
        </member>
        <member name="F:vxlapi_NET.XLClass.xl_ethernet_bus_params.phy">
            <summary>XL_ETH_STATUS_PHY_xxx</summary>
        </member>
        <member name="F:vxlapi_NET.XLClass.xl_ethernet_bus_params.link">
            <summary>XL_ETH_STATUS_LINK_xxx</summary>
        </member>
        <member name="F:vxlapi_NET.XLClass.xl_ethernet_bus_params.speed">
            <summary>XL_ETH_STATUS_SPEED_xxx</summary>
        </member>
        <member name="F:vxlapi_NET.XLClass.xl_ethernet_bus_params.clockMode">
            <summary>XL_ETH_STATUS_CLOCK_xxx</summary>
        </member>
        <member name="F:vxlapi_NET.XLClass.xl_ethernet_bus_params.bypass">
            <summary>XL_ETH_BYPASS_xxx</summary>
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_a429_tx">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Data set for a429 bus parameters.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_bus_params">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Data set for bus parameters.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_license_info">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Data set for licenses.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_chip_params">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Data set for chip parameters.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_chip_state">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Chip state.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_sync_pulse">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Sync pulse.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.s_xl_sync_pulse_ev">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Pulse Event
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_daio_data">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            DAIO.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_kline_data">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Single KLine data.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_kline_uartPar">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Data set for Kline status parameters.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_lin_msg">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Single LIN message.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_lin_msg_api">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            LIN tags.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_lin_sleep">
            --------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_lin_no_ans">
            --------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_lin_wake_up">
            --------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_lin_crc_info">
            --------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLClass.xl_linStatPar">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Data set for LIN status parameters.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLDefine.XLethernet_EventTags">
            -------------------------------------------------------------------
            <summary>
            Ethernet Event Tags 
            </summary>
            ------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLDefine.XLethernetEvent_FlagsChip">
            ------------------------------------------------------------------
            -------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLDefine.XLethernetSettings_BRpairs">
            -------------------------------------------------------------------
            -------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLDefine.XLethernetSettings_MdiMode">
            -------------------------------------------------------------------
            -------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLDefine.XLethernetSettings_ClockMode">
            -------------------------------------------------------------------
            -------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLDefine.XLethernetSettings_Phy">
            -------------------------------------------------------------------
            -------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLDefine.XLethernetSettings_Connector">
            -------------------------------------------------------------------
            -------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLDefine.XLethernetSettings_Duplex">
            -------------------------------------------------------------------
            -------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLDefine.XLethernetSettings_Speed">
            -------------------------------------------------------------------
            -------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLDefine.XLethernetChannelStatus_Link">
            -------------------------------------------------------------------
            -------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLDefine.XLethernetChannelStatus_Speed">
            -------------------------------------------------------------------
            -------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLDefine.XLethernetChannelStatus_Duplex">
            -------------------------------------------------------------------
            -------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLDefine.XLethernetChannelStatus_MDImode">
            -------------------------------------------------------------------
            -------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLDefine.XLethernetChannelStatus_ActiveConnector">
            -------------------------------------------------------------------
            -------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLDefine.XLethernetChannelStatus_ActivePhy">
            -------------------------------------------------------------------
            -------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLDefine.XLethernetChannelStatus_ClockMode">
            -------------------------------------------------------------------
            -------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLDefine.XLethernetChannelStatus_BRpairs">
            -------------------------------------------------------------------
            
            -------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLDefine.XLethernetStatus_TX_ErrorType">
            -------------------------------------------------------------------
            -------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLDefine.XLethernetStatus_RX_ErrorFlags">
            -------------------------------------------------------------------
            -------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLDefine.XLethernet_TX_Flags">
            -------------------------------------------------------------------
            -------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLDefine.XLethernet_FrameType">
            -------------------------------------------------------------------
            -------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLDefine.XLethernet_BypassMode">
            -------------------------------------------------------------------
            -------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.XLDriver">
            <summary>
            Vector XL Driver Library Wrapper for .NET
            Have a closer look on XL Driver API Description for detailed information.
            </summary>
            <summary>
            Vector XL Driver Library Wrapper for .NET
            Have a closer look on XL Driver API Decription for detailed information.
            </summary>
            <summary>
            Vector XL Driver Library Wrapper for .NET
            Have a closer look on XL Driver API Decription for detailed information.
            </summary>
            <summary>
            Vector XL Driver Library Wrapper for .NET
            Have a closer look on XL Driver API Decription for detailed information.
            </summary>
            <summary>
            Vector XL Driver Library Wrapper for .NET
            Have a closer look on XL Driver API Decription for detailed information.
            </summary>
            <summary>
            Vector XL Driver Library Wrapper for .NET
            Have a closer look on XL Driver API Decription for detailed information.
            </summary>
            <summary>
            Vector XL Driver Library Wrapper for .NET
            Have a closer look on XL Driver API Decription for detailed information.
            </summary>
            <summary>
            Vector XL Driver Library Wrapper for .NET
            Have a closer look on XL Driver API Decription for detailed information.
            </summary>
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_A429Receive(System.Int32,vxlapi_NET.XLClass.XLa429RxEvent@)">
            <summary>
            Fetching events from driver queue.
            </summary>
            <remarks>
            This method is used to fetch events, either bus events or acknowledgments 
            for commands from the driver queue. Each call delivers only one event (if an event is available). <br/>
            It is a synchronous mode and either delivers event data immediately, or
            indicates an error condition with its return value.
            </remarks>
            <param name="portHandle">Was previously fetched by xlOpenPort API</param>
            <param name="rxEvent">This parameter must point to a buffer to which the driver can copy
            the next event of the receive queue. The "size" member of this struct
            specifies the maximum size of the buffer (header plus receive data); upon return,
            it holds the actual size.
            </param>
            <returns>General status information</returns>
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_A429Transmit(System.Int32,System.UInt64,System.UInt32,System.UInt32@,vxlapi_NET.XLClass.XL_A429_MSG_TX@)">
            <summary>
            Transmit a Arinc429 word to the network.
            </summary>
            <remarks>
            This method is asynchronous; a confirmation of the transmit is received via an XL_A429_EV_TAG_TX_OK/XL_A429_EV_TAG_TX_ERR event.
            </remarks>
            <param name="portHandle">Was previously fetched by xlOpenPort API</param>
            <param name="accessMask">Access mask</param>
            <param name="msgCnt">Count of messages to be sent</param>
            <param name="msgCntSent">Count of messages actually sent</param>
            <param name="txMsg">Pointer to an Arinc429 frame to be sent</param>
            <returns>General status information</returns>
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_A429SetChannelParams(System.Int32,System.UInt64,vxlapi_NET.XLClass.XL_A429_PARAMS)">
            <summary>
            Configures basic Arinc429 settings.
            </summary>
            <remarks>
            This method is used to configure the basic Arinc429 settings like parity, bitrate, etc.
            </remarks>
            <param name="portHandle">Was previously fetched by xlOpenPort API</param>
            <param name="accessMask">Access mask</param>
            <param name="a429Params">New Arinc429 parameter to set</param>
            <returns>General status information</returns>
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_CanFdSetConfiguration(System.Int32,System.UInt64,vxlapi_NET.XLClass.XLcanFdConf)">
            <summary>
            Sets up a CAN FD channel. The structure differs between the arbitration part and the data part of a CAN message.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="CanFDConf">Configuration object to set up a CAN FD channel.</param>
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_CanTransmitEx(System.Int32,System.UInt64,System.UInt32@,vxlapi_NET.XLClass.XLcanTxEvent)">
            <summary>
            Transmits a CAN FD message on the selected channels.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="messageCounterSent">Amount of messages which were transmitted.</param>
            <param name="canTxEvent">User buffer with a single messages to be transmitted.</param>
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_CanTransmitEx(System.Int32,System.UInt64,System.UInt32@,vxlapi_NET.XLClass.xl_canfd_event_collection)">
            <summary>
            Transmits multiple CAN FD messages on the selected channels.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="messageCounterSent">Amount of messages which were transmitted.</param>
            <param name="canTxEventCollection">User buffer with a collection of messages to be transmitted.</param>
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_CanReceive(System.Int32,vxlapi_NET.XLClass.XLcanRxEvent@)">
            <summary>
            Receives a CAN FD messages on the selected port.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="canRxEvent">Event buffer that stores the received CAN FD message.</param>
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_CanGetEventString(vxlapi_NET.XLClass.XLcanRxEvent)">
            <summary>
            Returns a string based on the passed CAN Rx event data.
            </summary>
            <param name="canRxEvent">Event buffer with the received CAN FD message to be printed.</param>
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_CanSetChannelOutput(System.Int32,System.UInt64,vxlapi_NET.XLDefine.XL_OutputMode)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Sets channel to silent (no ack) or normal. 
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="mode">Specifies the output mode of the CAN chip.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_CanSetChannelMode(System.Int32,System.UInt64,System.UInt32,System.UInt32)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Enables/disables TX/TXRQ receipts for transmitted messages 
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="tx">0: disable TX receipts, 1: generate TX receipts.</param>
            <param name="txRq">0: disable TXRQ receipts, 1: generate TX receipts.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_CanSetReceiveMode(System.Int32,System.Byte,System.Byte)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Allows/suppresses error frames and chip state events. Default is to allow error frames and chip state events.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="errorFrame">0: allow error frames, 1: suppress error frames</param>
            <param name="chipState">0: allow chip state events, 1: suppress chip state events</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_CanSetChannelTransceiver(System.Int32,System.UInt64,vxlapi_NET.XLDefine.XL_Transceiver_Types,vxlapi_NET.XLDefine.XL_Transceiver_OperationModes,System.Int32)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Sets transceiver modes. 
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="type">Transceiver type.</param>
            <param name="lineMode">Line mode.</param>
            <param name="resNet">Reserved for future use. Set to 0.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_CanSetChannelParams(System.Int32,System.UInt64,vxlapi_NET.XLClass.xl_chip_params)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Inits channel params with a set of prepared chip params.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="chipParams">Chip parameters to be set.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_CanSetChannelParamsC200(System.Int32,System.UInt64,System.Byte,System.Byte)">
            -------------------------------------------------------------------------------------------------------------------------------
            /// <summary>
            Offers C200 Basic-CAN controller settings.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="btr0">BTRO value for a C200 or 527 compatible controllers.</param>
            <param name="btr1">BTR1 value for a C200 or 527 compatible controllers.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_CanSetChannelBitrate(System.Int32,System.UInt64,System.UInt32)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Sets the bitrate of the current port.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="bitrate">Bit rate in BPS. May be in the range 15000-1000000.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_CanSetChannelAcceptance(System.Int32,System.UInt64,System.UInt32,System.UInt32,vxlapi_NET.XLDefine.XL_AcceptanceFilter)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Sets acceptance filter.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="code">The acceptance code for id filtering.</param>
            <param name="mask">The acceptance mask for id filtering, bit = 1 means relevant.</param>
            <param name="idRange">To distinguish whether the filter is for standard or extended identifiers XL_CAN_STD or XL_CAN_EXT (see XLCLass.XLacceptanceFilter).</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_CanAddAcceptanceRange(System.Int32,System.UInt64,System.UInt32,System.UInt32)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Adds acceptance region for standard IDs.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="first_id">First ID to pass acceptance filter.</param>
            <param name="last_id">Last ID to pass acceptance filter.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_CanRemoveAcceptanceRange(System.Int32,System.UInt64,System.UInt32,System.UInt32)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Removes the acceptance region for standard IDs.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="first_id">First ID to be removed.</param>
            <param name="last_id">Last ID to be removed.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_CanResetAcceptance(System.Int32,System.UInt64,vxlapi_NET.XLDefine.XL_AcceptanceFilter)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Resets the acceptance region.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="idRange">Selects standard or extended.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_CanRequestChipState(System.Int32,System.UInt64)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Requests a CAN controller chip state for all selected channels.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_CanTransmit(System.Int32,System.UInt64,vxlapi_NET.XLClass.xl_event_collection)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Transmits multiple CAN events at once.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="xlEventCollection">A collection of one ore more XL events to be transmitted.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_CanTransmit(System.Int32,System.UInt64,vxlapi_NET.XLClass.xl_event)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Transmits a single CAN event.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="xlEvent">A single CAN event to be transmitted.</param>
            ------------------------------------------------------------------------------------------------------------------------------- 
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_CanFlushTransmitQueue(System.Int32,System.UInt64)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Flushes CAN transmit queue.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_EthTwinkleStatusLed(System.Int32,System.UInt64,System.UInt16)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Twinkle the Status LED from the interface for a short period of time. 
            </summary>
            ------------------------------------------------------------------------------------------------------------------------------- 
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_EthSetConfig(System.Int32,System.UInt64,System.UInt16,vxlapi_NET.XLClass.T_XL_ETH_CONFIG)">
            <summary>
            Configures basic Ethernet settings. This function needs init access.
            </summary>
            <param name="portHandle">The port handle retrieved by xlOpenPort.</param>
            <param name="accessMask">The mask of channels to be accessed.</param>
            <param name="userHandle">The handle is created by the application and is used for the event assignment.</param>
            <param name="config">Ethernet configuration structure.</param>
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_EthGetConfig(System.Int32,System.UInt64,System.UInt16,vxlapi_NET.XLClass.T_XL_ETH_CONFIG@)">
            <summary>
            Reads the basic Ethernet settings from the device that was configured last. 
            </summary>
            <param name="portHandle">The port handle retrieved by xlOpenPort.</param>
            <param name="accessMask">The mask of channels to be accessed.</param>
            <param name="userHandle">The handle is created by the application and is used for the event assignment.</param>
            <param name="config">Ethernet configuration structure.</param>
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_EthTransmit(System.Int32,System.UInt64,System.UInt16,vxlapi_NET.XLClass.T_XL_ETH_DATAFRAME_TX)">
            <summary>
            Transmits an Ethernet frame on the channel which is indicated in accessMask.
            </summary>
            <param name="portHandle">The port handle retrieved by xlOpenPort.</param>
            <param name="accessMask">The mask of channels to be accessed.</param>
            <param name="userHandle">The handle is created by the application and is used for the event assignment.</param>
            <param name="data">The Ethernet frame to be sent.</param>
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_EthReceive(System.Int32,vxlapi_NET.XLClass.T_XL_ETH_EVENT@)">
            <summary>
            Retrieves one event from the event queue. This operation is synchronous.
            </summary>
            <param name="portHandle">The port handle retrieved by xlOpenPort.</param>
            <param name="eventBuffer">Buffer for a single Ethernet event.</param>
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_FrSetConfiguration(System.Int32,System.UInt64,vxlapi_NET.XLClass.xl_fr_cluster_configuration@)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Configures the FlexRay CC.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="clusterConfig">Cluster configuration to be set.</param>
            ------------------------------------------------------------------------------------------------------------------------------- 
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_FrGetChannelConfiguration(System.Int32,System.UInt64,vxlapi_NET.XLClass.xl_fr_channel_config@)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Returns the actual cluster configuration depending on the channel.
            </summary>
            <param name="portHandle">The port handle retrieved by xlOpenPort (see XL API Description).</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="pxlFrChannelConfig">Object that returns the cluster configuration.</param>
            ------------------------------------------------------------------------------------------------------------------------------- 
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_FrSetMode(System.Int32,System.UInt64,vxlapi_NET.XLClass.xl_fr_set_modes)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Sets the operation mode for both VN3x00 CCs E-Ray (normal CC) and coldstart (Fujitsu CC). 
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="frMode">Structure of different operational modes.</param>
            ------------------------------------------------------------------------------------------------------------------------------- 
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_FrInitStartupAndSync(System.Int32,System.UInt64,vxlapi_NET.XLClass.xl_fr_event)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Initializes the coldstart and defines the sync frame. 
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="eventBuffer">FlexRay event buffer with the Sync Frame content to be transmitted.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_FrReceive(System.Int32,vxlapi_NET.XLClass.xl_fr_event@)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Reads one event from the FlexRay receive queue.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="eventBuffer">Event buffer that returns the event content.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_FrTransmit(System.Int32,System.UInt64,vxlapi_NET.XLClass.xl_fr_event@)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            The function sends static and dynamic frames with the event tag TX.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="eventBuffer">FlexRay event buffer with the content to be transmitted.</param>
            ------------------------------------------------------------------------------------------------------------------------------- 
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_FrSetupSymbolWindow(System.Int32,System.UInt64,vxlapi_NET.XLDefine.XL_FlexRay_FlagsChip,vxlapi_NET.XLDefine.XL_FlexRay_SymbolWindowMask)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Sets the symbol window. 
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="frChannel">FlexRay channel.</param>
            <param name="symbolWindowMask">Defines the Media Access Symbol.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_FrSetTransceiverMode(System.Int32,System.UInt64,vxlapi_NET.XLDefine.XL_FlexRay_FlagsChip,vxlapi_NET.XLDefine.XL_FlexRay_TansceiverMode)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Sets the transceiver modes. 
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="frChannel">FlexRay channel.</param>
            <param name="mode">Specifies the transceiver mode.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_FrSendSymbolWindow(System.Int32,System.UInt64,vxlapi_NET.XLDefine.XL_FlexRay_SymbolWindowMask)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Sends a symbol window during the next following symbol window as configured by xlFrSetupSymbolWindow. 
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="symbolWindow">Defines the Media Access Symbol.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_FrActivateSpy(System.Int32,System.UInt64,vxlapi_NET.XLDefine.XL_FlexRay_SpyMode)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>  
            Activates the Spy in asynchronous mode.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="mode">Mode of the Spy.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_FrSetAcceptanceFilter(System.Int32,System.UInt64,vxlapi_NET.XLClass.xl_fr_acceptance_filter)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Sets the acceptance filter for FR.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="acceptanceFilter">Structure with acceptance filter settings.</param>
            ------------------------------------------------------------------------------------------------------------------------------- 
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_SetTimerBaseNotify(System.Int32,System.Int32@)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Sets up an event to notify the application based on the timer rate. 
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="pHandle">Buffer for WIN32 event handle.</param>  
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_GetFREventString(vxlapi_NET.XLClass.xl_fr_event)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Returns a textual description of the given event.
            </summary>
            <param name="xlEvent">Returns a textual description of the given FlexRay event.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_WaitForSingleObject(System.Int32,System.Int32)">
            <summary>
            .NET implementation of WaitForSingleObject.
            </summary>
            <param name="handle">The handle returned by XL_SetNotification().</param>
            <param name="timeOut">The time-out interval, in milliseconds.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_OpenDriver">
            <summary>
            Opens the XL Driver. 
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_CloseDriver">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Closes the XL Driver. 
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_GetApplConfig(System.String,System.UInt32,vxlapi_NET.XLDefine.XL_HardwareType@,System.UInt32@,System.UInt32@,vxlapi_NET.XLDefine.XL_BusTypes)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Gets information about the application assignment which is set in the Vector Hardware Configuration tool.
            </summary>
            <param name="appName">Application name in Vector Hardware Config.</param>
            <param name="appChannel">Selects the application channel (0,1,...).</param>
            <param name="hwType">Returned hardware type.</param>
            <param name="hwIndex">Returned hardware index.</param>
            <param name="hwChannel">Returned hardware channel.</param>
            <param name="busType">Specifies the bus type which is used by the application.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_SetApplConfig(System.String,System.UInt32,vxlapi_NET.XLDefine.XL_HardwareType,System.UInt32,System.UInt32,vxlapi_NET.XLDefine.XL_BusTypes)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Creates a new application in Vector Hardware Config or sets the channel configuration in an exiting application.
            </summary>
            <param name="appName">Name of the application to be set.</param>
            <param name="appChannel">Application channel (0,1,...) to be accessed.</param>
            <param name="hwType">The hardware type to be stored.</param>
            <param name="hwIndex">The hardware index withing a hardware type.</param>
            <param name="hwChannel">The channel index of the selected hardware.</param>
            <param name="busType">Specifies the bus type for the application.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_GetDriverConfig(vxlapi_NET.XLClass.xl_driver_config@)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Gets the driver configuration. 
            </summary>
            <param name="driverConfig">Object that returns the driver configuration.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_GetRemoteDriverConfig(vxlapi_NET.XLClass.xl_driver_config@)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Gets the driver configuration for VN8900. 
            </summary>
            <param name="driverConfig">Object that returns the driver configuration.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_GetRemoteDeviceInfo(vxlapi_NET.XLClass.xl_remote_device_info[]@,System.UInt32@,System.UInt32)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Gets the remote device information.
            </summary>
            <param name="remoteDeviceInfo">Object that returns the remote device information.</param>
            <param name="nbrOfRemoteDevices">The number of available network devices.</param>
            <param name="netSearch">One of the defines: XL_REMOTE_NET_SEARCH or XL_REMOTE_NO_NET_SEARCH</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_GetChannelIndex(vxlapi_NET.XLDefine.XL_HardwareType,System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Gets the channel index of a particular hardware channel.
            </summary>
            <param name="hwType">The requested hardware type.</param>
            <param name="hwIndex">The hardware index within a hardware type.</param>
            <param name="hwChannel">The channel index of the selected hardware.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_GetChannelMask(vxlapi_NET.XLDefine.XL_HardwareType,System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Gets the channel mask of a particular hardware channel. 
            </summary>
            <param name="hwType">The requested hardware type.</param>
            <param name="hwIndex">The hardware index within a hardware type.</param>
            <param name="hwChannel">The channel index of the selected hardware.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_OpenPort(System.Int32@,System.String,System.UInt64,System.UInt64@,System.UInt32,vxlapi_NET.XLDefine.XL_InterfaceVersion,vxlapi_NET.XLDefine.XL_BusTypes)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Opens a port for a bus type (e.g. CAN) and grants access to the different channels that are selected by 'accessMask'. 
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>        
            <param name="userName">Name which is displayed in Vector Hardware Config for a given hardware.</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="permissionMask">Mask specifying the channels that are affected for init access.</param>
            <param name="rxQueueSize">Specifies the number of events that can be stored in the queue.</param>
            <param name="xlInterfaceVersion">Current API version.</param>
            <param name="busType">Bus type that should be activated.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_SetTimerRate(System.Int32,System.UInt32)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Sets the rate for the port's cyclic timer events. 
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="timerRate">Value specifying the interval for cyclic timer events generated by a port. 0: no cyclic timer events.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_SetTimerRateAndChannel(System.Int32,System.UInt64@,System.UInt32@)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Sets the rate for the port's cyclic timer events (channel specific). 
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="timerChannelMask">Mask specifying the channels at which timer events may be generated.</param>
            <param name="timerRate">Value specifying the interval for cyclic timer events generated by a port. If 0 is passed, no cyclic timer events will be generated.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_ResetClock(System.Int32)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Resets the time stamps (in nanoseconds) for the specified port.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_SetNotification(System.Int32,System.Int32@,System.Int32)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Creates and returns an event WIN32 handle for Rx events.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="handle">Variable that returns the event handle.</param>  
            <param name="queueLevel">Queue level that triggers this event. For LIN it is 1.</param>  
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_FlushReceiveQueue(System.Int32)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Flushes the port's receive queue.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_GetReceiveQueueLevel(System.Int32,System.Int32@)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Returns the number of events in the receive queue.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="level">Variable that returns the number of events.</param>    
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_ActivateChannel(System.Int32,System.UInt64,vxlapi_NET.XLDefine.XL_BusTypes,vxlapi_NET.XLDefine.XL_AC_Flags)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Activates the channels. 
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="busType">Bus type that should be activated.</param>
            <param name="flags">Additional flags for activating the channels.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_Receive(System.Int32,vxlapi_NET.XLClass.xl_event@)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Reads a single event from hardware queue if available. 
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="xlEvent">Variable that returns the received XL event.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_Receive(System.Int32,System.Int32,System.Collections.Generic.List{vxlapi_NET.XLClass.xl_event}@)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Reads multiple events from hardware queue if available. 
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="eventCount">Number of events to be read at once from the queue.</param>
            <param name="xlEvents">List that returns the received XL events.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_GetErrorString(vxlapi_NET.XLDefine.XL_Status)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Returns a textual description of a returned XL status code.
            </summary>
            <param name="status">An error code.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_GetEventString(vxlapi_NET.XLClass.xl_event)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Returns a textual description of a given event.
            </summary>
            <param name="xlEvent">A received XL event.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_GetSyncTime(System.Int32,System.UInt64@)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Returns the current high precision PC time (in ns) since PC start. 
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="time">Variable that returns the sync time.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_GenerateSyncPulse(System.Int32,System.UInt64)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Generates a sync pulse.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_PopupHwConfig">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Opens the Vector Hardware Config.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_PopupHwConfig(System.String,System.UInt32)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Opens the Vector Hardware Config.
            </summary>
            <param name="callSign">Command line options</param>
            <param name="waitForFinish">Time until execution has to be terminated</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_DeactivateChannel(System.Int32,System.UInt64)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Deactivates the selected channels. 
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels to be deactived. </param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_ClosePort(System.Int32)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Closes a port.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_GetLicenseInfo(System.UInt64,vxlapi_NET.XLClass.xl_license_info[]@,System.UInt32)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            This function returns an array with all available licenses from the selected Vector device.
            </summary>
            <param name="channelMask">The channel mask of the Vector device containing the licenses.</param>
            <param name="licInfoArray">Array that returns the license info.</param>
            <param name="licInfoArraySize">Size of the array.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_SetGlobalTimeSync(vxlapi_NET.XLDefine.XL_TimeSyncNewValue,vxlapi_NET.XLDefine.XL_TimeSyncNewValue@)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Reads/sets the software synchronization setting in the Vector Hardware Config tool. 
            </summary>
            <param name="newValue">New value to be set.</param>
            <param name="previousValue">Variable that stores the previous value.</param>
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_GetKeymanBoxes(System.UInt32@)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Keyman functions - got get the amount of connected keymans
            </summary>
            <param name="boxCount">amount of keymans</param>
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_GetKeymanInfo(System.UInt32,System.UInt32@,System.UInt32@,System.UInt64[]@)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Returns the keyman licenses
            </summary>
            <param name="boxIndex">keyman index</param>
            <param name="boxMask">keyman mask</param>
            <param name="boxSerial">keyman serial number</param>
            <param name="licInfo">keyman licenses</param>
        </member>
        <member name="M:vxlapi_NET.XLDriver.VersionToString(System.UInt32)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Converts version number defined to string.
            </summary>
            <param name="versionNumber">The version number which is stored in DriverConfig.driverVersion.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_DAIOSetAnalogParameters(System.Int32,System.UInt64,System.UInt32,System.UInt32,System.UInt32)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Configures the analog lines.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="inputMask">Mask for lines to be configured as input.</param>
            <param name="outputMask">Mask for lines to be configured as output.</param>
            <param name="highRangeMask">Mask for lines that should use high range mask for input resolution.</param>
            ------------------------------------------------------------------------------------------------------------------------------- 
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_DAIOSetAnalogOutput(System.Int32,System.UInt64,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Sets analog output line to the required voltage level.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="analogLine1">Voltage level in mV for AIO0.</param>
            <param name="analogLine2">Voltage level in mV for AIO1.</param>
            <param name="analogLine3">Voltage level in mV for AIO2.</param>
            <param name="analogLine4">Voltage level in mV for AIO3.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_DAIOSetAnalogTrigger(System.Int32,System.UInt64,System.UInt32,System.UInt32,vxlapi_NET.XLDefine.XL_DAIO_TriggerMode)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Sets the analog trigger functionality up.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="triggerMask">Line to be used as trigger input. Currently only supported by line AIO3 of the IOcab 8444opto (mask = 0b1000).</param>
            <param name="triggerLevel">Voltage level in mV for the trigger.</param>
            <param name="triggerEventMode">Selects the event trigger mode.</param>
            ------------------------------------------------------------------------------------------------------------------------------- 
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_DAIOSetDigitalParameters(System.Int32,System.UInt64,System.UInt32,System.UInt32)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Configures the digital lines. Per default all lines are set to input.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="inputMask">Mask for lines to be configured as input.</param>
            <param name="outputMask">Mask for lines to be configured as output.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_DAIOSetDigitalOutput(System.Int32,System.UInt64,System.UInt32,System.UInt32)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Sets digital output line to a required logical level.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="outputMask">Mask specifying the lines that are affected).</param>
            <param name="valuePattern">Mask specifying the switch state for digital output.</param>
            ------------------------------------------------------------------------------------------------------------------------------- 
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_DAIOSetPWMOutput(System.Int32,System.UInt64,System.UInt32,System.UInt32)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Changes PWM output to defined frequency and value.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="frequency">PWM frequency in Hertz. Allowed values: 40...500 Hertz and 2.4kHz...100kHz.</param>
            <param name="val">Ratio for pulse high/pulse low times with resolution of 0.01 percent. Allowed values: 0 (100% pulse low)...10000 (100% pulse high).</param> 
            ------------------------------------------------------------------------------------------------------------------------------- 
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_DAIOSetMeasurementFrequency(System.Int32,System.UInt64,System.UInt32)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Sets the measurement frequency.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="measurementInterval">Measurement frequency in ms.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_DAIORequestMeasurement(System.Int32,System.UInt64)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Forces a manual measurement of DAIO values.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            ------------------------------------------------------------------------------------------------------------------------------- 
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_IoSetTriggerMode(System.Int32,System.UInt64,vxlapi_NET.XLClass.xl_daio_trigger_mode)">
            -------------------------------------------------------------------------------------------------------------------------------
            ----------------------------------------------------------------------------------------------------------------------------
            <summary>
            Configures trigger functionality.
            </summary>
            <param name="portHandle">The port handle retrieved by xlOpenPort.</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="pxlDaioTriggerMode">Use this structure to define the trigger type.</param>
            ------------------------------------------------------------------------------------------------------------------------------- 
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_IoSetDigitalOutput(System.Int32,System.UInt64,vxlapi_NET.XLClass.xl_daio_digital_params)">
            ------------------------------------------------------------------------------------------------------------------------------- 
            <summary>
            Configures the digital output.
            </summary>
            <param name="portHandle">The port handle retrieved by xlOpenPort.</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="pxlDaioDigitalParams">Use this structure to set the value of the digital out pin.</param>
            ------------------------------------------------------------------------------------------------------------------------------- 
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_IoConfigurePorts(System.Int32,System.UInt64,vxlapi_NET.XLClass.xl_daio_set_port)">
            ------------------------------------------------------------------------------------------------------------------------------- 
            <summary>
            Configures the DAIO ports of an IOpiggy.
            </summary>
            <param name="portHandle">The port handle retrieved by xlOpenPort.</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="pxlDaioSetPort">Structure to configure the port.</param>
            ------------------------------------------------------------------------------------------------------------------------------- 
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_IoSetDigInThreshold(System.Int32,System.UInt64,System.UInt32)">
            ------------------------------------------------------------------------------------------------------------------------------- 
            <summary>
            Defines the voltage level for logical high and logical low (digital input).
            </summary>
            <param name="portHandle">The port handle retrieved by xlOpenPort.</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="level">10 bit value that defines the voltage level (mV) for the input threshold.</param>
            ------------------------------------------------------------------------------------------------------------------------------- 
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_IoSetDigOutLevel(System.Int32,System.UInt64,vxlapi_NET.XLDefine.XL_DAIO_OutputLevel)">
            ------------------------------------------------------------------------------------------------------------------------------- 
            <summary>
            Defines the voltage level for logical high (digital output).
            </summary>
            <param name="portHandle">The port handle retrieved by xlOpenPort.</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="level">Output level.</param>
            ------------------------------------------------------------------------------------------------------------------------------- 
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_IoStartSampling(System.Int32,System.UInt64,vxlapi_NET.XLDefine.XL_DAIO_PortTypeMask)">
            ------------------------------------------------------------------------------------------------------------------------------- 
            <summary>
            Requests DAIO measurement data and is independent of the defined trigger mode.
            </summary>
            <param name="portHandle">The port handle retrieved by xlOpenPort.</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="portTypeMask">Analog or digital.</param>
            ------------------------------------------------------------------------------------------------------------------------------- 
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_IoSetAnalogOutput(System.Int32,System.UInt64,vxlapi_NET.XLClass.xl_daio_analog_params)">
            ------------------------------------------------------------------------------------------------------------------------------- 
            <summary>
            Configures the analog output.
            </summary>
            <param name="portHandle">The port handle retrieved by xlOpenPort.</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="pxlDaioAnalogParams">Structure to set the value of the analog out pin.</param>
            ------------------------------------------------------------------------------------------------------------------------------- 
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_KlineSetUartParams(System.Int32,System.UInt64,vxlapi_NET.XLClass.xl_kline_uartPar)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Setup the UART parameters. It is needed to get K-Line running.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="pxlKlineUartParams">Parameter settings.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_KlineSwitchHighspeedMode(System.Int32,System.UInt64,vxlapi_NET.XLDefine.XL_KLine_TrxMode)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Switch on / off the high-speed mode for LINPiggy7269.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="trxMode">Selects the mode.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_KlineSwitchTesterResistor(System.Int32,System.UInt64,vxlapi_NET.XLDefine.XL_KLine_TesterResistor)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Switch on / off the tester resistor for K-Line.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="testerR">Selects the tester Resistor.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_KlineSetBaudrate(System.Int32,System.UInt64,System.UInt32)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Set the tester or ECU baudrate.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="baudrate">Specifies the baudrate: in baud. 200Bd…115.2kBd</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_KlineInit5BdTester(System.Int32,System.UInt64,vxlapi_NET.XLClass.xl_kline_init_5BdTester)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Execute 5Baud init pattern (tester). Called after activating the channel.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="tester">Selects the tester Resistor.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_KlineInit5BdEcu(System.Int32,System.UInt64,vxlapi_NET.XLClass.xl_kline_init_5BdEcu)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Configure the 5Bd-Init response frame per ECU. Can be called only once per ECU before activating the channel.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="ecu"></param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_KlineSetCommunicationTimingTester(System.Int32,System.UInt64,vxlapi_NET.XLClass.xl_kline_set_communicationTiming_tester)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Setup the tester communication parameters. It returns a KLINE_CONFIRMATION event.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="tester"></param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_KlineFastInitTester(System.Int32,System.UInt64,System.UInt32,System.Byte[],vxlapi_NET.XLClass.xl_kline_init_tester)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Execute fast init sequence followed by a data frame (tester). Called after activating the channel.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="length">Data buffer length in bytes. Set to ‘1’ to send a single byte of a K-Line frame. The maximum length is limited to 300 bytes</param>
            <param name="data">K-Line data buffer. Contains a complete K-Line TX frame</param>
            <param name="initTester"></param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_KlineSetCommunicationTimingEcu(System.Int32,System.UInt64,vxlapi_NET.XLClass.xl_kline_set_communicationTiming_ecu)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Setup the ECU communication parameters. It returns a KLINE_CONFIRMATION event.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="ecu"></param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_KlineTransmit(System.Int32,System.UInt64,System.UInt32,System.Byte[])">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Transmit a complete K-Line frame. Can be also used to send a single byte.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="length">Data buffer length in bytes. Set to ‘1’ to send a single byte of a K-Line frame. The maximum length is limited to 300 bytes.</param>
            <param name="data">K-Line data buffer. Contains a complete K-Line TX frame</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_LinSetChannelParams(System.Int32,System.UInt64,vxlapi_NET.XLClass.xl_linStatPar)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Defines the mode and the baudrate of the LIN channel.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="linStatPar">Parameter settings.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_LinSetDLC(System.Int32,System.UInt64,System.Byte[])">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Defines the DLC length for all requested LIN messages.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="DLC">Specifies the length of all LIN messages (0...63). The value can be 0...8 for a valid DLC.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_LinSetChecksum(System.Int32,System.UInt64,System.Byte[])">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            This function is only for a LIN 2.0 node and must be called before activating a channel.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="checksum">Selects the calculation for each ID [0...59].</param>
            ------------------------------------------------------------------------------------------------------------------------------- 
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_LinSetSlave(System.Int32,System.UInt64,System.Byte,System.Byte[],System.Byte,vxlapi_NET.XLDefine.XL_LIN_CalcChecksum)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Sets up a LIN slave.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="linId">LIN ID on which the slave transmits a response.</param>
            <param name="data">Contains the data bytes.</param>
            <param name="dlc">Defines the dlc for the LIN message.</param>
            <param name="checksum">Defines the checksum calculation.</param>
            ------------------------------------------------------------------------------------------------------------------------------- 
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_LinSendRequest(System.Int32,System.UInt64,System.Byte,System.UInt32)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Sends a master LIN request to the slave(s).
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="linId">Contains the master request LIN ID.</param>
            <param name="flags">For future use. Set to 0.</param>
            ------------------------------------------------------------------------------------------------------------------------------- 
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_LinWakeUp(System.Int32,System.UInt64)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Sends a wake-up.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            ------------------------------------------------------------------------------------------------------------------------------- 
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_LinSetSleepMode(System.Int32,System.UInt64,vxlapi_NET.XLDefine.XL_LIN_SleepMode,System.Byte)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Activates the sleep mode.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="flags">Selects the mode.</param>
            <param name="linId">Defines the LIN ID that is transmitted at wake-up.</param>
            ------------------------------------------------------------------------------------------------------------------------------- 
        </member>
        <member name="M:vxlapi_NET.XLDriver.XL_LinSwitchSlave(System.Int32,System.UInt64,System.Byte,vxlapi_NET.XLDefine.XL_LIN_SlaveMode)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Enables/disables a LIN slave during measurement.
            </summary>
            <param name="portHandle">The port handle returned by xlOpenPort().</param>
            <param name="accessMask">Mask specifying the channels that are affected.</param>
            <param name="linId">Contains the master request LIN ID.</param>
            <param name="mode">Selects the mode.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:vxlapi_NET.I_XLapiFunctions">
            <summary>
            Implement XL API functions here at first.
            </summary>
            <summary>
            Implement XL API functions here at first.
            </summary>
            <summary>
            Implement XL API functions here at first.
            </summary>
            <summary>
            Implement XL API functions here at first.
            </summary>
            <summary>
            Implement XL API functions here at first.
            </summary>
            <summary>
            Implement XL API functions here at first.
            </summary>
            <summary>
            Implement XL API functions here at first.
            </summary>
            <summary>
            Implement XL API functions here at first.
            </summary>
        </member>
        <member name="M:vxlapi_NET.XLMarshalling.Write_A429TxMessage(vxlapi_NET.XLClass.XL_A429_MSG_TX)">
            <summary>
            Writes properties of a XLClass.XL_A429_MSG_TX object to a byte array.
            </summary>
            <param name="txMessage">The XLClass.XL_A429_MSG_TX object to be written.</param>
            <returns>A byte array containing the properties of the XLClass.XL_A429_MSG_TX object</returns>
        </member>
        <member name="M:vxlapi_NET.XLMarshalling.Write_A429Params(vxlapi_NET.XLClass.XL_A429_PARAMS)">
            <summary>
            Writes properties of a XLClass.XL_A429_PARAMS object to a byte array.
            </summary>
            <param name="xlParams">The XLClass.XL_A429_PARAMS object to be written.</param>
            <returns>A byte array containing the properties of the XLClass.XL_A429_PARAMS object.</returns>
        </member>
        <member name="M:vxlapi_NET.XLMarshalling.Read_A429RxEvent(System.Byte[])">
            <summary>
            Reads properties of a XLClass.XLa429RxEvent object from a byte array.
            </summary>
            <param name="byteArray"></param>
            <returns></returns>
        </member>
        <member name="T:vxlapi_NET.xlSingleChannelCAN_Port">
            -----------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Comfort Layer class. Contains "easy-to-use" methods to get quick access to any XL hardware. 
            </summary>
            -----------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.xlSingleChannelCAN_Port.#ctor(System.String,System.UInt32)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Creates and opens a CAN port of the named application/channel number. 
            If the application name is unkown in the Vector Hardware Config, it will
            be created automatically with two CAN channels.
            </summary>
            <param name="appName">Name of application in Vector Hardware Config.</param>
            <param name="appChannel">Channel number of the application to be used (Vector Hardware Config).</param>
            -------------------------------------------------------------------------------------------------------------------------------          
        </member>
        <member name="M:vxlapi_NET.xlSingleChannelCAN_Port.xlActivate">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Activates the opened port (after xlSingleChannelCAN_Port()).
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------  
        </member>
        <member name="M:vxlapi_NET.xlSingleChannelCAN_Port.xlCheckPort">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Checks, if port is available.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.xlSingleChannelCAN_Port.xlTransmit(System.UInt32,System.UInt16,System.UInt64)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Transmits a single CAN message.
            </summary>
            <param name="id">ID of the CAN message.</param>
            <param name="dlc">Data length of the message.</param>
            <param name="data">8 byte value containing the data.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.xlSingleChannelCAN_Port.xlClosePort">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Closes the created and opened port.
            </summary>
            ------------------------------------------------------------------------------------------------------------------------------- 
        </member>
        <member name="M:vxlapi_NET.xlSingleChannelCAN_Port.xlCanAddAcceptanceRange(System.UInt32,System.UInt32)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Adds an acceptance filter range for standard CAN IDs.
            </summary>
            <param name="first_id">First ID of range.</param>
            <param name="last_id">Last ID of range.</param>
            ------------------------------------------------------------------------------------------------------------------------------- 
        </member>
        <member name="M:vxlapi_NET.xlSingleChannelCAN_Port.xlResetAcceptanceFilter">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Resets acceptance filter (all messages with standard IDs blocked).
            </summary>
            ------------------------------------------------------------------------------------------------------------------------------- 
        </member>
        <member name="M:vxlapi_NET.xlSingleChannelCAN_Port.xlPrintRx(vxlapi_NET.XLClass.xl_event)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Prints an event to console.
            </summary>
            <param name="receivedEvent">Received event to be print.</param>
            ------------------------------------------------------------------------------------------------------------------------------- 
        </member>
        <member name="M:vxlapi_NET.xlSingleChannelCAN_Port.xlReceive(vxlapi_NET.XLClass.xl_event@)">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Receives one message of the hardware queue.
            </summary>
            <param name="rxEvent">Reference to a xlEvent which is filled with the received event.</param>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:vxlapi_NET.xlSingleChannelCAN_Port.xlPrintConfig">
            -------------------------------------------------------------------------------------------------------------------------------
            <summary>
            Prints retrieved configuration to console.
            </summary>
            -------------------------------------------------------------------------------------------------------------------------------
        </member>
    </members>
</doc>
